
# NAVIGATION
# ---------------------------------------------------------
alias ls="ls -lhp"
alias up1="cd ../"
alias up2="cd ../../"
alias up3="cd ../../../"
alias up4="cd ../../../../"
alias up5="cd ../../../../../"

# CONVENIENCE COMMANDS
# ---------------------------------------------------------
# Find all symbolic links in the current directory.
alias find-links="find . -type l | xargs ls -l --color=auto"

# If the zip has files with Japanese filenames, using the
# regular unzip will garble the Japanese characters. Use
# this to preserve filenames.
alias unzip-ja="unzip -O cp932 $1"

# TERMINAL CONFIGURATION
# ---------------------------------------------------------
# Set the tab title (for Ubuntu Terminal)
function set-tab-title() {
  if [[ -z "$ORIG" ]]; then
    ORIG=${PS1}
  fi
  TITLE="\[\e]2;$*\a\]"
  PS1=${ORIG}${TITLE}
}
export -f set-tab-title

# DOCKER
# ---------------------------------------------------------
# When using a local registry, there might not be a clear
# way of knowing what images are already stored there. This
# aliases can be used to query available images and tags.
function docker-query-images {
  echo "Querying list of images from $1"
  curl --insecure $1/v2/_catalog
}
function docker-query-image-tags {
  echo "Querying list of tags from $1/$2"
  curl --insecure $1/v2/$2/tags/list
}
export -f docker-query-images
export -f docker-query-image-tags

# PYTHON
# ---------------------------------------------------------
# Convenience functions for setting/resetting PYTHONPATH.
# Useful when integrating with other aliases.
#   Ex. alias prepare-env="pythonpath-append lib; do-other-stuff"
function pythonpath-reset {
  export PYTHONPATH=
  echo $PYTHONPATH
}
function pythonpath-append {
  export PYTHONPATH=$PYTHONPATH:$1
  echo $PYTHONPATH
}
export -f pythonpath-reset
export -f pythonpath-append

# PYTHON VENV
# ---------------------------------------------------------
export VENV_DIR=$HOME/.venvs
function mkvenv {
  if [ -z $2 ];
  then
    # Use whatever is defined/aliased as `python3`
    PY=python3
  else
    # Specify an exact python3.x version, in case
    # system has multiple versions installed
    # Ex. python3.5, python3.7, python3.8
    PY=$2
  fi
  $PY -m venv "$VENV_DIR/$1";
}
function upvenv { source "$VENV_DIR/$1/bin/activate"; }
function dnvenv { deactivate; }
function rmvenv { rm -R "$VENV_DIR/$1"; }
alias lsvenv="ls $VENV_DIR"
export -f mkvenv
export -f upvenv
export -f dnvenv
export -f rmvenv
