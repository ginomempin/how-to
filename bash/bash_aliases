
# SHORTCUTS FOR BASIC COMMANDS
# ---------------------------------------------------------
alias ll="ls -FlhpG"
alias lla="ll -a"
alias up1="cd ../"
alias up2="cd ../../"
alias up3="cd ../../../"
alias up4="cd ../../../../"
alias up5="cd ../../../../../"
alias rsync="rsync -a -h --stats --info=COPY,DEL,NAME1,PROGRESS2,REMOVE,SYMSAFE"
function mkcd { mkdir "$1" && cd "$1"; }
export -f mkcd

# FIND THINGS
# ---------------------------------------------------------
# Find all symbolic links in the current directory.
alias find-links="find . -type l | xargs ls -l --color=auto"

# Find all broken symbolic links from a specific directory
function find-broken-symlinks()
{
  if [[ -z "$1" ]];
  then
    echo "ERROR: Please specify the search path."
    echo "Ex. find-broken-symlinks /home/projects"
  else
    for broken in $(find "$1" -type l ! -exec test -e {} \; -print);
    do
        ls -l ${broken}
    done
  fi
}
export -f find-broken-symlinks

# COMPRESSED THINGS
# ---------------------------------------------------------
# If the zip has files with Japanese filenames, using the
# regular unzip will garble the Japanese characters. Use
# this to preserve filenames.
alias unzip-ja="unzip -O cp932 $1"

# DISK USAGE
# ---------------------------------------------------------
# Print a sorted list of disk usages from a specific directory.
function print-du-sorted()
{
  if [[ -z "$1" ]]; then
    echo "ERROR. Please specify the directory to check."
    echo "Ex. print-du-sorted /media/commonpf"
  else
    du $1 -h | sort -h
  fi
}
export -f print-du-sorted

# TERMINAL CONFIGURATION
# ---------------------------------------------------------
# Set the tab title (for Ubuntu Terminal)
function set-tab-title()
{
  if [[ -z "$ORIG" ]]; then
    ORIG=${PS1}
  fi
  TITLE="\[\e]2;$*\a\]"
  PS1=${ORIG}${TITLE}
}
export -f set-tab-title

# DOCKER
# ---------------------------------------------------------
# When using a local registry, there might not be a clear
# way of knowing what images are already stored there. This
# aliases can be used to query available images and tags.
function docker-query-images
{
  echo "Querying list of images from $1"
  curl --insecure $1/v2/_catalog
}
function docker-query-image-tags
{
  echo "Querying list of tags from $1/$2"
  curl --insecure $1/v2/$2/tags/list
}
export -f docker-query-images
export -f docker-query-image-tags

# PYTHON
# ---------------------------------------------------------
# Convenience functions for setting/resetting PYTHONPATH.
# Useful when integrating with other aliases.
#   Ex. alias prepare-env="pythonpath-append lib; do-other-stuff"
function pythonpath-reset
{
  export PYTHONPATH=
  echo $PYTHONPATH
}
function pythonpath-append
{
  export PYTHONPATH=$PYTHONPATH:$1
  echo $PYTHONPATH
}
export -f pythonpath-reset
export -f pythonpath-append

# PYTHON VENV
# ---------------------------------------------------------
export VENV_DIR=$HOME/.venvs
function mkvenv
{
  if [ -z $2 ];
  then
    # Use whatever is defined/aliased as `python3`
    PY=python3
  else
    # Specify an exact python3.x version, in case
    # system has multiple versions installed
    # Ex. python3.5, python3.7, python3.8
    PY=$2
  fi
  $PY -m venv "$VENV_DIR/$1";
}
function upvenv { source "$VENV_DIR/$1/bin/activate"; }
function dnvenv { deactivate; }
function rmvenv { rm -R "$VENV_DIR/$1"; }
alias lsvenv="ll $VENV_DIR"
export -f mkvenv
export -f upvenv
export -f dnvenv
export -f rmvenv
